- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Import VPC Setup Variables
      include_vars: vars/vpc_setup
      
    - name: Create vprofile VPC
      amazon.aws.ec2_vpc_net:
        name: "{{vpc_name}}"
        cidr_block: "{{vpcCidr}}"
        region: "{{region}}"
        dns_support: true 
        dns_hostnames: true 
        state: "{{state}}"
        tenancy: default
        tags:
          Environment: "Production"
          Project: "VprProject" 
      register: vpcout  

    - debug: 
        var: vpcout 

    - name: Create Public subnet1 in  Zone1
      amazon.aws.ec2_vpc_subnet:
        state: "{{state}}"
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        cidr: "{{PubSub1Cidr}}"
        az: "{{zone1}}"
        map_public: yes
        tags:
          Name: vprofile-pubsub1
      register: pubsub1_out  

    - debug: 
        var: pubsub1_out 

    - name: Create Public subnet2 in  Zone2
      amazon.aws.ec2_vpc_subnet:
        state: "{{state}}"
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        cidr: "{{PubSub2Cidr}}"
        az: "{{zone2}}"
        map_public: yes
        tags:
          Name: vprofile-pubsub2
      register: pubsub2_out  

    - debug: 
        var: pubsub2_out     

    - name: Create Public subnet3 in  Zone3
      amazon.aws.ec2_vpc_subnet:
        state: "{{state}}"
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        cidr: "{{PubSub3Cidr}}"
        az: "{{zone3}}"
        map_public: yes
        tags:
          Name: vprofile-pubsub3
      register: pubsub3_out  

    - debug: 
        var: pubsub3_out       

    - name: Create Private subnet1 in  Zone1
      amazon.aws.ec2_vpc_subnet:
        state: "{{state}}"
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        cidr: "{{PrivSub1Cidr}}"
        az: "{{zone1}}"
        map_public: yes
        tags:
          Name: vprofile-privsub1
      register: privsub1_out  

    - debug: 
        var: privsub1_out    

    - name: Create Private subnet2 in  Zone2
      amazon.aws.ec2_vpc_subnet:
        state: "{{state}}"
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        cidr: "{{PrivSub2Cidr}}"
        az: "{{zone2}}"
        map_public: yes
        tags:
          Name: vprofile-privsub2
      register: privsub2_out  

    - debug: 
        var: privsub2_out 

    - name: Create Private subnet3 in  Zone3
      amazon.aws.ec2_vpc_subnet:
        state: "{{state}}"
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        cidr: "{{PrivSub3Cidr}}"
        az: "{{zone3}}"
        map_public: yes
        tags:
          Name: vprofile-privsub3
      register: privsub3_out  

    - debug: 
        var: privsub3_out   

    - name: Create Internet gateway with tags
      amazon.aws.ec2_vpc_igw:
        vpc_id: "{{vpcout.vpc.id}}"
        state: "{{state}}"
        region: "{{region}}"
        tags:
          Name: vprofile_IGW
      register: igw_out  
    - debug:
        var: igw_out

    - name: Set up public subnet route table
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        tags:
          Name:  VProfile-PubRT
        subnets:
          - "{{pubsub1_out.subnet.id}}"
          - "{{pubsub2_out.subnet.id}}"
          - "{{pubsub3_out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{igw_out.gateway_id}}"
      register: pubRT_out     

    - debug:
        var: pubRT_out

    - name: Create new nat gateway and allocate new EIP if a nat gateway does not yet exist in the subnet.
      amazon.aws.ec2_vpc_nat_gateway:
        state: "{{state}}"
        subnet_id: "{{pubsub1_out.subnet.id}}"
        wait: true
        region: "{{region}}"
        if_exist_do_not_create: true
      register: NATGW_out

    - debug:  
        var: NATGW_out
        
    
    
 